apiVersion: v1
kind: ConfigMap
metadata:
  name: wrapper
data:
  test.sh: |
        #!/bin/sh
        apk add --no-cache logrotate docker  moreutils 
        rm /etc/logrotate.conf && rm -r /etc/logrotate.d 
        mv /etc/periodic/daily/logrotate /etc/.logrotate.cronjob
        if [ -e /etc/logrotate.conf ]; then
        echo "Using mounted /etc/logrotate.conf:"
        else
        echo "include /etc/logrotate.d"  >> /etc/logrotate.conf
        fi
        echo "${DOCKER_CRON_SCHEDULE} ${DOCKER_COMMAND}" >> /etc/crontabs/root
        echo "${LOGROTATE_CRON_SCHEDULE} /usr/sbin/logrotate -v /etc/logrotate.conf" >> /etc/crontabs/root
        exec crond   -f 2>&1
        
        
        
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpine
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: ubuntu
        image: alpine
        command: ["/scripts/test.sh"]
        volumeMounts:
        - name: wrapper
          mountPath: /scripts
      volumes:
      - name: wrapper
      configMap:
          name: wrapper
          defaultMode: 0744
